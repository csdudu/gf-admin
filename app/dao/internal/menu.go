// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
)

// MenuDao is the manager for logic model data accessing and custom defined data operations functions management.
type MenuDao struct {
	Table   string      // Table is the underlying table name of the DAO.
	Group   string      // Group is the database configuration group name of current DAO.
	Columns MenuColumns // Columns is the short type for Columns, which contains all the column names of Table for convenient usage.
}

// MenuColumns defines and stores column names for table menu.
type MenuColumns struct {
	Id        string // 菜单ID
	Name      string // 菜单名称
	Router    string // 请求地址
	Method    string // 请求类型(1 = "Get",2 = "Post",3 = "Put",4 = "DELETE")
	Key       string // 标识
	Pid       string // 菜单上级ID
	Type      string // 菜单类型（1= "目录"2 = “菜单”，3 = “按钮”，4 = “隐藏”）
	Link      string // 菜单路径
	CreatedAt string // 创建时间
	CreatedId string // 添加人
	UpdatedAt string // 最后更新时间
	UpdatedId string // 最后更新人
	DeletedAt string // 删除时间
	DeletedId string // 删除人
}

//  menuColumns holds the columns for table menu.
var menuColumns = MenuColumns{
	Id:        "id",
	Name:      "name",
	Router:    "router",
	Method:    "method",
	Key:       "key",
	Pid:       "pid",
	Type:      "type",
	Link:      "link",
	CreatedAt: "created_at",
	CreatedId: "created_id",
	UpdatedAt: "updated_at",
	UpdatedId: "updated_id",
	DeletedAt: "deleted_at",
	DeletedId: "deleted_id",
}

// NewMenuDao creates and returns a new DAO object for table data access.
func NewMenuDao() *MenuDao {
	return &MenuDao{
		Group:   "default",
		Table:   "menu",
		Columns: menuColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *MenuDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *MenuDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *MenuDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
